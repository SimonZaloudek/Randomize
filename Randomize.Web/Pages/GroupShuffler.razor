@page "/groupshuffler"
@using Randomize.Core.Services
@inject IJSRuntime JS

<div class="content">

    <h2>Group Shuffler</h2>
    
    <textarea class="textfield-main" style="width: 30%" @bind ="input" rows="10" placeholder="Enter names/items to shuffle... (separated by enter)"></textarea>
    <br/>
    <p style="margin-bottom: 4px">Number of groups:</p>
    <input class="textfield-num" type="number" style="width: 8%; min-width: 45px;" placeholder="2" min="1" @bind="groupCount" />
    <br />
    <button class="button-main" style="margin-top: 10px" @onclick="Shuffle">Shuffle</button>
    
    @if (groups.Any())
    {
        @for (int i = 0; i < groups.Count; i++)
        {
            <p>Group @(i + 1)</p>
            <ul>
                @foreach (var person in groups[i])
                {
                    <li>@person</li>
                }
            </ul>
        }
    }

</div>

@code {
    private string input = "";
    private int groupCount = 2;
    private List<List<string>> groups = new();

    private async Task Shuffle()
    {
        if (groupCount < 1 || groupCount > 15)
        {
            await JS.InvokeVoidAsync("alert", "Group count must be greater than 0 and smaller than 16.");
            return;
        }
        else if (groupCount > GroupShufflerCore.InputCount(input))
        {
            await JS.InvokeVoidAsync("alert", "Group count cannot be higher than input count.");
            return;
        }
        else
        {
            groups = GroupShufflerCore.ShuffleIntoGroups(input, groupCount);
        }
    }
}